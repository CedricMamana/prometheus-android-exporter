//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: remote-write.proto

package protogen;

@kotlin.jvm.JvmSynthetic
public inline fun writeRequest(block: protogen.WriteRequestKt.Dsl.() -> kotlin.Unit): protogen.RemoteWrite.WriteRequest =
  protogen.WriteRequestKt.Dsl._create(protogen.RemoteWrite.WriteRequest.newBuilder()).apply { block() }._build()
public object WriteRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: protogen.RemoteWrite.WriteRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: protogen.RemoteWrite.WriteRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): protogen.RemoteWrite.WriteRequest = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class TimeseriesProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated .protogen.TimeSeries timeseries = 1;</code>
     */
     public val timeseries: com.google.protobuf.kotlin.DslList<protogen.RemoteWrite.TimeSeries, TimeseriesProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getTimeseriesList()
      )
    /**
     * <code>repeated .protogen.TimeSeries timeseries = 1;</code>
     * @param value The timeseries to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addTimeseries")
    public fun com.google.protobuf.kotlin.DslList<protogen.RemoteWrite.TimeSeries, TimeseriesProxy>.add(value: protogen.RemoteWrite.TimeSeries) {
      _builder.addTimeseries(value)
    }/**
     * <code>repeated .protogen.TimeSeries timeseries = 1;</code>
     * @param value The timeseries to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignTimeseries")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<protogen.RemoteWrite.TimeSeries, TimeseriesProxy>.plusAssign(value: protogen.RemoteWrite.TimeSeries) {
      add(value)
    }/**
     * <code>repeated .protogen.TimeSeries timeseries = 1;</code>
     * @param values The timeseries to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllTimeseries")
    public fun com.google.protobuf.kotlin.DslList<protogen.RemoteWrite.TimeSeries, TimeseriesProxy>.addAll(values: kotlin.collections.Iterable<protogen.RemoteWrite.TimeSeries>) {
      _builder.addAllTimeseries(values)
    }/**
     * <code>repeated .protogen.TimeSeries timeseries = 1;</code>
     * @param values The timeseries to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllTimeseries")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<protogen.RemoteWrite.TimeSeries, TimeseriesProxy>.plusAssign(values: kotlin.collections.Iterable<protogen.RemoteWrite.TimeSeries>) {
      addAll(values)
    }/**
     * <code>repeated .protogen.TimeSeries timeseries = 1;</code>
     * @param index The index to set the value at.
     * @param value The timeseries to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setTimeseries")
    public operator fun com.google.protobuf.kotlin.DslList<protogen.RemoteWrite.TimeSeries, TimeseriesProxy>.set(index: kotlin.Int, value: protogen.RemoteWrite.TimeSeries) {
      _builder.setTimeseries(index, value)
    }/**
     * <code>repeated .protogen.TimeSeries timeseries = 1;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearTimeseries")
    public fun com.google.protobuf.kotlin.DslList<protogen.RemoteWrite.TimeSeries, TimeseriesProxy>.clear() {
      _builder.clearTimeseries()
    }}
}
@kotlin.jvm.JvmSynthetic
public inline fun protogen.RemoteWrite.WriteRequest.copy(block: protogen.WriteRequestKt.Dsl.() -> kotlin.Unit): protogen.RemoteWrite.WriteRequest =
  protogen.WriteRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()
