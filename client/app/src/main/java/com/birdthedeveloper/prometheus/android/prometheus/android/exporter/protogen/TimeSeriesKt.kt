//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: remote-write.proto

package protogen;

@kotlin.jvm.JvmSynthetic
public inline fun timeSeries(block: protogen.TimeSeriesKt.Dsl.() -> kotlin.Unit): protogen.RemoteWrite.TimeSeries =
  protogen.TimeSeriesKt.Dsl._create(protogen.RemoteWrite.TimeSeries.newBuilder()).apply { block() }._build()
public object TimeSeriesKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: protogen.RemoteWrite.TimeSeries.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: protogen.RemoteWrite.TimeSeries.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): protogen.RemoteWrite.TimeSeries = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class LabelsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated .protogen.Label labels = 1;</code>
     */
     public val labels: com.google.protobuf.kotlin.DslList<protogen.RemoteWrite.Label, LabelsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getLabelsList()
      )
    /**
     * <code>repeated .protogen.Label labels = 1;</code>
     * @param value The labels to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addLabels")
    public fun com.google.protobuf.kotlin.DslList<protogen.RemoteWrite.Label, LabelsProxy>.add(value: protogen.RemoteWrite.Label) {
      _builder.addLabels(value)
    }/**
     * <code>repeated .protogen.Label labels = 1;</code>
     * @param value The labels to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignLabels")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<protogen.RemoteWrite.Label, LabelsProxy>.plusAssign(value: protogen.RemoteWrite.Label) {
      add(value)
    }/**
     * <code>repeated .protogen.Label labels = 1;</code>
     * @param values The labels to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllLabels")
    public fun com.google.protobuf.kotlin.DslList<protogen.RemoteWrite.Label, LabelsProxy>.addAll(values: kotlin.collections.Iterable<protogen.RemoteWrite.Label>) {
      _builder.addAllLabels(values)
    }/**
     * <code>repeated .protogen.Label labels = 1;</code>
     * @param values The labels to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllLabels")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<protogen.RemoteWrite.Label, LabelsProxy>.plusAssign(values: kotlin.collections.Iterable<protogen.RemoteWrite.Label>) {
      addAll(values)
    }/**
     * <code>repeated .protogen.Label labels = 1;</code>
     * @param index The index to set the value at.
     * @param value The labels to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setLabels")
    public operator fun com.google.protobuf.kotlin.DslList<protogen.RemoteWrite.Label, LabelsProxy>.set(index: kotlin.Int, value: protogen.RemoteWrite.Label) {
      _builder.setLabels(index, value)
    }/**
     * <code>repeated .protogen.Label labels = 1;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearLabels")
    public fun com.google.protobuf.kotlin.DslList<protogen.RemoteWrite.Label, LabelsProxy>.clear() {
      _builder.clearLabels()
    }
    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class SamplesProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated .protogen.Sample samples = 2;</code>
     */
     public val samples: com.google.protobuf.kotlin.DslList<protogen.RemoteWrite.Sample, SamplesProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getSamplesList()
      )
    /**
     * <code>repeated .protogen.Sample samples = 2;</code>
     * @param value The samples to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addSamples")
    public fun com.google.protobuf.kotlin.DslList<protogen.RemoteWrite.Sample, SamplesProxy>.add(value: protogen.RemoteWrite.Sample) {
      _builder.addSamples(value)
    }/**
     * <code>repeated .protogen.Sample samples = 2;</code>
     * @param value The samples to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignSamples")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<protogen.RemoteWrite.Sample, SamplesProxy>.plusAssign(value: protogen.RemoteWrite.Sample) {
      add(value)
    }/**
     * <code>repeated .protogen.Sample samples = 2;</code>
     * @param values The samples to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllSamples")
    public fun com.google.protobuf.kotlin.DslList<protogen.RemoteWrite.Sample, SamplesProxy>.addAll(values: kotlin.collections.Iterable<protogen.RemoteWrite.Sample>) {
      _builder.addAllSamples(values)
    }/**
     * <code>repeated .protogen.Sample samples = 2;</code>
     * @param values The samples to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllSamples")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<protogen.RemoteWrite.Sample, SamplesProxy>.plusAssign(values: kotlin.collections.Iterable<protogen.RemoteWrite.Sample>) {
      addAll(values)
    }/**
     * <code>repeated .protogen.Sample samples = 2;</code>
     * @param index The index to set the value at.
     * @param value The samples to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setSamples")
    public operator fun com.google.protobuf.kotlin.DslList<protogen.RemoteWrite.Sample, SamplesProxy>.set(index: kotlin.Int, value: protogen.RemoteWrite.Sample) {
      _builder.setSamples(index, value)
    }/**
     * <code>repeated .protogen.Sample samples = 2;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearSamples")
    public fun com.google.protobuf.kotlin.DslList<protogen.RemoteWrite.Sample, SamplesProxy>.clear() {
      _builder.clearSamples()
    }}
}
@kotlin.jvm.JvmSynthetic
public inline fun protogen.RemoteWrite.TimeSeries.copy(block: protogen.TimeSeriesKt.Dsl.() -> kotlin.Unit): protogen.RemoteWrite.TimeSeries =
  protogen.TimeSeriesKt.Dsl._create(this.toBuilder()).apply { block() }._build()
